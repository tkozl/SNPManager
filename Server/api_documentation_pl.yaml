openapi: 3.0.3
info:
  title: SNPManager - OpenAPI 3.0
  description: |-
    API aplikacji SNPManager umożliwia komunikację aplikacji klienckich z serwerem aplikacji. W poniższej dokumentacji znajduje się opis wszystkich obsługiwanych zapytań API umożliwiających bezpieczny dostęp do danych klientów.

    Repozytorium aplikacji:
    [kliknij tutaj](https://github.com/tkozl/SNPManager.git)

    ### Dostęp
    Do dostępu do większości zasobów konieczne jest załączenie do zapytania tokenu dostępowego. Token ten jest przesyłany przez serwer w odpowiedzi na dostarczenie poprawnych danych autoryzacyjnych użytkownika.

    ### Błędy zapytań
    Niektóre zapytania mogą zwrócić błąd `400` oznaczający wprowadzenie w zapytaniu nieprawidłowych danych. W takiej sytuacji w odpowiedzi serwer umieszcza id oraz opisy przyczyn odrzucenia zapytania. Informacje o możliwych błędach są umieszczone w specyfikacji poszczególnych zapytań. Lista możliwych błędów:
    - `invalid_email` - nieprawidłowy format adresu mailowego
    - `wrong_password` - błędne hasło - używane po zalogowaniu się na konto w operacjach wymagających potwierdzenia hasłem
    - `too_low_password_complexity` - zbyt niska złożoność hasła - hasło jest zbyt krótkie lub zdiagnozowano podatność na ataki słownikowe
    - `invalid_name` - podana nazwa zawiera niedozwolone znaki
    - `too_long_string` - został przekroczony maksymalny dopuszczalny rozmiar danych wejściowych
    - `already_exists` wskazany zasób już istnieje
    - `unknown_encryption_type` - nierozpoznany typ szyfru
  
  version: 1.0.0

tags:
  - name: Konta
    description: Obsługa mechanizmów uwierzytelniania oraz zarządzania kontami użytkowników
  - name: Katalogi
    description: Zarządzanie drzewem katalogów na koncie użytkownika
  - name: Wpisy
    description: Zarządzanie wpisami użytkowników

paths:
  /account:
    put:
      tags:
        - Konta
      summary: Modyfikacja konta użytkownika
      description: Umożliwia zmianę adresu email lub hasła użytkownika. Po zmianie adresu email konieczna jest weryfikacja nowego przed dalszym korzystaniem z konta. Wszelkie zmiany wymagają podania obecnego hasła.
      parameters:
        - in: query
          name: changeMail
          description: Jeśli `true` to zostanie zmieniony adres mailowy - należy przesłać `newMail`
          schema:
            type: boolean
          required: false
        - in: query
          name: changePassword
          description: Jeśli `true` to zostanie zmienione hasło - należy przesłać `newPassword`
          schema:
            type: boolean
          required: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newMail:
                  type: string
                newPassword:
                  type: string
        required: true
      responses:
        '201':
          description: Zmiany zapisane
        '400':
          description:
            Nieprawidłowo wprowadzone dane. Możliwe ID błędów to `invalid_email`, `wrong_password`, `too_low_password_complexity`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
      - BearerAuth: []
    get:
      tags:
        - Konta
      summary: Informacje o aktywnym koncie
      description: Pobranie danych koncie na które użytkownik jest aktualnie zalogowany. Zwraca adres email, stosowany algorytm szyfrowania, informację czy ustawiona jest weryfikacja dwuskładnikowa, informację czy adres email jest potwierdzony, datę założenia konta, data ostatniej zmiany hasła, ilość wpisów, listę ostatnich poprawnych logowań oraz listę ostatnich nieudanych logowań
      parameters:
        - in: query
          name: max_correct_logins
          description: Maksymalna liczba zwracanych prób zalogowania się zakończonych sukcesem. Domyślnie 10.
          schema:
            type: integer
          required: false
        - in: query
          name: max_incorrect_logins
          description: Maksymalna liczba zwracanych nieudanych prób zalogowania się. Domyślnie 10.
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Pobrano dane o koncie
          content:
            application/json:
              schema:
                type: object
                properties:
                  mail:
                    type: string
                    example: user@example.com
                  encryptionType:
                    type: string
                    example: aes-256
                  is2faActive:
                    type: boolean
                  isMailActive:
                    type: boolean
                  creationDate:
                    type: integer
                    example: 1681040805
                  numberOfEntries:
                    type: integer
                  lastPasswordChange:
                    type: integer
                    example: 1681040805
                  lastAccess:
                    type: array
                    items:
                      type: object
                      properties:
                        time:
                          type: integer
                          example: 1681044405
                        ip:
                          type: string
                          example: 82.139.4.22
                  lastLoginErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        time:
                          type: integer
                          example: 1681044345
                        ip:
                          type: string
                          example: 82.139.4.22
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
        - BearerAuth: []
    delete:
      tags:
        - Konta
      summary: Usunięcie konta
      description: Aby bezpowrotnie usunąć konto należy wysłać niniejsze zapytanie zawierające aktualne hasło. Serwer wyśle następnie link ważny 1h na adres mailowy przypisany do konta. Po kliknięciu w link konto zostanie usunięte. Jeśli adres mailowy nie został potwierdzony, konto usuwane jest od razu.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
        required: true
      responses:
        '204':
          description: Żądanie zakceptowane
        '400':
          description: Błędne hasło. ID błędu `wrong_password`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
        - BearerAuth: []
    post:
      tags:
        - Konta
      summary: Utworzenie nowego konta użytkownika
      description: Rejestracja w systemie nowego konta użytkownika poprzez podanie adresu mailowego, hasła oraz mechanizmu który zostanie wykorzystany do szyfrowania bazy danych. Konto takie musi być następnie potwierdzone.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: securepassword
                encryptionType:
                  type: string
                  example: aes-256
        required: true
      responses:
        '201':
          description: Konto utworzone
        '400':
          description: Nieprawidłowy adres email (`invalid_email`), hasło niespełniające zasad złożoności (`too_low_password_complexity`), zbyt długi ciąg tekstowy (`too_long_string`) lub nieznany algorytm szyfrujący (`unknown_encryption_type`)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /account/email_verification:
    post:
      tags:
        - Konta
      summary: Generowanie kodu weryfikującego adres email
      description: Po założeniu konta użytkownika konieczne jest zweryfikowanie konta aby móc z niego korzystać. Kod po wygenerowaniu umieszczany jest w odpowiednio przygotowanym linku a następnie wysyłany na adres email przypisany do konta
      responses:
        '204':
          description: Link weryfikacyjny wysłany na adres email
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
        - BearerAuth: []
  
  /account/2fa:
    put:
      tags:
        - Konta
      summary: Konfiguracja mechanizmu 2fa
      description: Zapytanie umożliwia konfigurację mechanizmu 2fa zarówno w sytuacji gdy konto nie ma jeszcze skonfigurowanego takiego mechanizmu, jak i gdy mechanizm ten jest już skonfigurowany ale chcemy zrobić to jeszce raz
      responses:
        '201':
          description: Mechanizm 2fa został aktywowany
          content:
            application/json:
              schema:
                type: object
                properties:
                  secretCode:
                    type: string
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
        - BearerAuth: []
    delete:
      tags:
        - Konta
      summary: Usunięcie mechanizmu 2fa
      description: Zapytanie pozwala na dezaktywację obecnego mechanizmu 2fa z konta
      responses:
        '204':
          description: Mechanizm 2fa wyłączony
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
        - BearerAuth: []
  
  /login:
    post:
      tags:
        - Konta
      summary: Logowanie do konta użytkownika
      description: Logowanie do konta użytkownika wymaga przesłania nazwy użytkownika oraz hasła. Po poprawnym zalogowaniu zostanie odesłany token dostępowy ważny maksymalnie 12 godzin. Zostanie również odesłana informacja czy jest wymagane logowanie dwuskładnikowe. Jeśli tak, należy dosłać kod 2fa osobnym zapytaniem.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: securepassword
        required: true
      responses:
        '200':
          description: Poprawnie zalogowano
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiration:
                    type: number
                    example: 1694256060
                  is2faRequired:
                    type: boolean
        '401':
          description: Dane logowania są błędne
        '403':
          description: Odrzucone z powodu bezpieczeństwa
    delete:
      tags:
        - Konta
      summary: Wylogowanie się z konta użytkownika
      description: Wylogowanie się z konta użytkownika jest rónoznaczne z unieważnieniem tokenu dostępowego.
      responses:
        '204':
          description: Poprawnie wylogowano
        '401':
          $ref: '#/components/responses/401Unauthorized'
  
  /login/2fa:
    post:
      tags:
        - Konta
      summary: Weryfikacja dwuskładnikowa podczas logowania się na konto
      description: Zapytanie umożliwia dosłanie kodu 2fa w sytuacji kiedy jest on potrzebny aby uzyskać dostęp do konta.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                passcode:
                  type: integer
        required: true
      responses:
        '204':
          description: Kod zaakceptowany
        '401':
          description: Podano błędny kod lub użytkownik nie jest zalogowany do systemu
      security:
        - BearerAuth: []
  
  /directory:
    post:
      tags:
        - Katalogi
      summary: Utworzenie nowego katalogu
      description: Zapytanie umożliwia utworzenie nowego katalogu w wybranej lokalizacji
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Directory'
        required: true
      responses:
        '204':
          description: Katalog utworzony
        '400':
          description: Nie można utworzyć katalogu ponieważ nazwa katalogu zawiera niedozwolone znaki (`invalid_name`), nazwa jest zbyt długa (`too_long_string`), lub wskazany katalog już istnieje (`already_exists`).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          description: Podano błędną ścieżkę dostępu
      security:
        - BearerAuth: []
    delete:
      tags:
        - Katalogi
      summary: Usunięcie katalogu
      description: Zapytanie umożliwia usunięcie dowolnego katalogu w wybranej lokalizacji. Katalog taki zostanie przeniesiony do kosza.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Directory'
        required: true
      responses:
        '204':
          description: Katalog pomyślnie usunięty
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          description: Usuwanie wskazanego katalogu jest zabronione (kosz lub katalog główny)
        '404':
          description: Nie znaleziono wskazanego katalogu
      security:
        - BearerAuth: []
    get:
      tags:
        - Katalogi
      summary: Pobranie zawartości katalogu
      description: Pobranie listy wpisów i podkatalogów znajdujących się w wybranym katalogu.
      parameters:
        - in: query
          name: dir_path
          description: Lokalizacja katalogu którego zawartość chcemy pobrać. Domyślnie zwracana jest zawartość katalogu głównego `/`.
          example: /parent/child
          schema:
            type: string
          required: false
        - in: query
          name: recursive
          description: Informacja czy listowanie ma być rekurencyjne. Domyślnie `true`.
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  directories:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                        directories:
                          type: array
                          items:
                            type: object
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          description: Nie znaleziono wskazanego katalogu
      security:
        - BearerAuth: []
    put:
      tags:
        - Katalogi
      summary: Zmiana nazwy lub lokalizacji katalogu
      description: Zapytanie umożliwia przenoszenie katalogu i zapisywanie go w dowolnej lokalizacji pod starą bądź nową nazwą
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPath:
                  type: string
                  example: /current
                dstPath:
                  type: string
                  example: /parent/new_path
        required: true
      responses:
        '204':
          description: Katalog przeniesiony
        '403':
          description: Wskazano katalog który nie może być przedmiotem niniejszesgo zapytania
        '400':
          description: Nie można przenieść katalogu ponieważ nazwa katalogu zawiera niedozwolone znaki (`invalid_name`), nazwa jest zbyt długa (`too_long_string`), lub wskazany katalog docelowy już istnieje (`already_exists`).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          description: Podano błędną ścieżkę dostępu
      security:
        - BearerAuth: []

  /trash_path:
    get:
      tags:
        - Katalogi
      summary: Lokalizacja kosza
      description: Zapytanie zwraca lokalizację katalogu specjalnego Kosz
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  trashPath:
                    type: string
        '401':
          $ref: '#/components/responses/401Unauthorized'
      security:
        - BearerAuth: []

components:
  schemas:
    Directory:
      type: object
      properties:
        name:
          type: string
        parentPath:
          type: string
          example: /parent/child/
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              errorID:
                type: string
              description:
                type: string
  
  responses:
    401Unauthorized:
      description: Dostęp do zasobu wymaga autoryzacji

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer